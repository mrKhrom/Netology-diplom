
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

Функция ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании) Экспорт
	
	Если ПравоДоступа("Добавление", Метаданные.Документы.РеализацияТоваровУслуг) Тогда
		
		КомандаСоздатьНаОсновании = КомандыСозданияНаОсновании.Добавить();
		КомандаСоздатьНаОсновании.Менеджер = Метаданные.Документы.РеализацияТоваровУслуг.ПолноеИмя();
		КомандаСоздатьНаОсновании.Представление = ОбщегоНазначения.ПредставлениеОбъекта(Метаданные.Документы.РеализацияТоваровУслуг);
		КомандаСоздатьНаОсновании.РежимЗаписи = "Проводить";
		
		Возврат КомандаСоздатьНаОсновании;
		
	КонецЕсли;

	Возврат Неопределено;
	
КонецФункции

Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	// Акт об оказанных услугах	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "Акт";
	КомандаПечати.Представление = НСтр("ru = 'Акт об оказании услугах'");
	КомандаПечати.Порядок = 5; 
 
КонецПроцедуры  

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	//--{ Khrom 01.04.2024 15:10:54  -- 
	ПечатнаяФорма = УправлениеПечатью.СведенияОПечатнойФорме(КоллекцияПечатныхФорм, "Акт");
	
	Если ПечатнаяФорма <> Неопределено Тогда
		
		ПечатнаяФорма.ТабличныйДокумент = ПечатьАктаОбОказанныхУслугах(МассивОбъектов, ОбъектыПечати);
		ПечатнаяФорма.СинонимМакета = НСтр("ru = 'Акт об оказании услуг'");
		ПечатнаяФорма.ПолныйПутьКМакету = "Документ.РеализацияТоваровУслуг.ВКМ_ПФ_MXL_АктОбОказанныхУслугах";
		
	КонецЕсли;
	//-- Khrom 01.04.2024 15:11:02  }--
	
КонецПроцедуры

//@skip-check module-structure-method-in-regions
//@skip-check module-structure-method-in-regions
Функция ПечатьАктаОбОказанныхУслугах(МассивОбъектов, ОбъектыПечати) 
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	//ТабличныйДокумент.КлючПараметровПечати = "ПараметрыПечати_Акт";
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.РеализацияТоваровУслуг.ВКМ_ПФ_MXL_АктОбОказанныхУслугах");
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	РеализацияТоваровУслуг.Ссылка КАК Ссылка,
		|	РеализацияТоваровУслуг.Номер КАК Номер,
		|	РеализацияТоваровУслуг.Дата КАК Дата,
		|	РеализацияТоваровУслуг.Организация КАК Исполнитель,
		|	РеализацияТоваровУслуг.Контрагент КАК Контрагент,
		|	РеализацияТоваровУслуг.Договор КАК Договор,
		|	РеализацияТоваровУслуг.Услуги.(
		|		НомерСтроки КАК НомерСтроки,
		|		Номенклатура КАК Номенклатура,
		|		Количество КАК Количество,
		|		Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
		|		Цена КАК Цена,
		|		Сумма КАК Сумма
		|	) КАК Услуги,
		|	РеализацияТоваровУслуг.СуммаДокумента КАК СуммаДокумента
		|ИЗ
		|	Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
		|ГДЕ
		|	РеализацияТоваровУслуг.Ссылка В(&МассивОбъектов)";
	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();

	ТабличныйДокумент.Очистить();
	
	ВставлятьРазделительСтраниц = Ложь;

	Пока Выборка.Следующий() Цикл
		
		Если ВставлятьРазделительСтраниц Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		ВывестиЗаголовокАкта(Выборка, ТабличныйДокумент, Макет);
		ВывестиРеквизитыСторон(Выборка, ТабличныйДокумент, Макет);
		ВывестиУслуги(Выборка, ТабличныйДокумент, Макет);
		ВывестиСуммуПрописью(Выборка, ТабличныйДокумент, Макет);
		ВывестиПодвалРеализации(Выборка, ТабличныйДокумент, Макет);
		
	КонецЦикла;
	
	УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, Выборка.Ссылка);	
	
	Возврат ТабличныйДокумент;
	
КонецФункции

//@skip-check module-structure-method-in-regions
//@skip-check module-structure-method-in-regions
Процедура ВывестиЗаголовокАкта(ДанныеДокументов, ТабличныйДокумент, Макет);
	
	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	
	ДанныеПечати = Новый Структура;
	ШаблонЗаголовка = "Акт об оказании услуг № %1 от %2";
	Загаловок = СтрШаблон(ШаблонЗаголовка, ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(ДанныеДокументов.Номер), Формат(ДанныеДокументов.Дата, "ДЛФ=DD"));
	ДанныеПечати.Вставить("Загаловок", Загаловок);
	
	ОбластьЗаголовок.Параметры.Заполнить(ДанныеПечати);
	ТабличныйДокумент.Вывести(ОбластьЗаголовок);
	
КонецПроцедуры

//@skip-check module-structure-method-in-regions
Процедура ВывестиРеквизитыСторон(ДанныеДокументов, ТабличныйДокумент, Макет);
	
	ОбластьИсполнитель = Макет.ПолучитьОбласть("Исполнитель");
	ОбластьПокупатель = Макет.ПолучитьОбласть("Покупатель"); 
	
	ДанныеПечати = Новый Структура;
	ДанныеПечати.Вставить("ПредставлениеИсполнителя", ДанныеДокументов.Исполнитель);
	ДанныеПечати.Вставить("ПредставлениеПокупателя", ДанныеДокументов.Контрагент);
	ДанныеПечати.Вставить("Основание", ДанныеДокументов.Договор);
	
	ОбластьИсполнитель.Параметры.Заполнить(ДанныеПечати);
	ТабличныйДокумент.Вывести(ОбластьИсполнитель);
	
	ОбластьПокупатель.Параметры.Заполнить(ДанныеПечати);
	ТабличныйДокумент.Вывести(ОбластьПокупатель);
	
КонецПроцедуры

//@skip-check module-structure-method-in-regions
Процедура ВывестиУслуги(ДанныеДокументов, ТабличныйДокумент, Макет)
	
	ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы"); 
	ОбластьСтрока = Макет.ПолучитьОбласть("Строка"); 
	ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
	ОбластьИтого = Макет.ПолучитьОбласть("Итого");    
	
	ТабличныйДокумент.Вывести(ОбластьШапкаТаблицы);
	
	ВыборкаУслуги = ДанныеДокументов.Услуги.Выбрать();
	Пока ВыборкаУслуги.Следующий() Цикл
		ОбластьСтрока.Параметры.Заполнить(ВыборкаУслуги);
		ТабличныйДокумент.Вывести(ОбластьСтрока);
	КонецЦикла;
	
	ТабличныйДокумент.Вывести(ОбластьПодвал);
	
	ДанныеПечати = Новый Структура;
	ДанныеПечати.Вставить("Всего", ДанныеДокументов.СуммаДокумента);
	
	ОбластьИтого.Параметры.Заполнить(ДанныеПечати);
	ТабличныйДокумент.Вывести(ОбластьИтого);

КонецПроцедуры

//@skip-check module-structure-method-in-regions
Процедура ВывестиСуммуПрописью(ДанныеДокументов, ТабличныйДокумент, Макет);
	ОбластьСуммаПрописью = Макет.ПолучитьОбласть("СуммаПрописью"); 
	
	СуммаРубли = Цел(ДанныеДокументов.СуммаДокумента);
    СуммаКопейки = (ДанныеДокументов.СуммаДокумента - СуммаРубли);
    
    РублиЧислом     = Формат(СуммаРубли, "ЧДЦ=0; ЧГ=0");
    РублиПрописью   = ЧислоПрописью(СуммаРубли, "Л = ru_RU; НД = Ложь", "рубль, рубля, рублей, м, копейка, копейки, копеек, ж, 0"); 
    СуммаПрописью = РублиЧислом + " (" + РублиПрописью + ") " + СуммаКопейки + " коп.";
	
	ДанныеПечати = Новый Структура;
	ДанныеПечати.Вставить("СуммаПрописью", СуммаПрописью);

    ОбластьСуммаПрописью.Параметры.Заполнить(ДанныеПечати);
	ТабличныйДокумент.Вывести(ОбластьСуммаПрописью);

КонецПроцедуры

//@skip-check module-structure-method-in-regions
Процедура ВывестиПодвалРеализации(ДанныеДокументов, ТабличныйДокумент, Макет);
	
	ОбластьПодвалРеализации = Макет.ПолучитьОбласть("ПодвалРеализации");
   	ТабличныйДокумент.Вывести(ОбластьПодвалРеализации);
		
КонецПроцедуры

#КонецОбласти

#КонецЕсли