#Область ОбработчикиСобытийФормы  

&НаКлиенте
Процедура ОтпускаСотрудниковДатаНачалаПриИзменении(Элемент)
	
	СтрокаОтпуска = ЭтаФорма.ТекущийЭлемент.ТекущиеДанные;
	
	Если ЗначениеЗаполнено(СтрокаОтпуска.ДатаНачала) И ЗначениеЗаполнено(СтрокаОтпуска.ДатаОкончания) Тогда
	
		СтрокаОтпуска.КоличествоДнейОтпуска = (НачалоДня(СтрокаОтпуска.ДатаОкончания) - НачалоДня(СтрокаОтпуска.ДатаНачала)) / (24*360);
	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтпускаСотрудниковДатаОкончанияПриИзменении(Элемент)
	
	СтрокаОтпуска = ЭтаФорма.ТекущийЭлемент.ТекущиеДанные;
	
	Если ЗначениеЗаполнено(СтрокаОтпуска.ДатаНачала) И ЗначениеЗаполнено(СтрокаОтпуска.ДатаОкончания) Тогда
	
		СтрокаОтпуска.КоличествоДнейОтпуска = (НачалоДня(СтрокаОтпуска.ДатаОкончания) - НачалоДня(СтрокаОтпуска.ДатаНачала)) / (24*3600);
	
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиКомандФормы
&НаКлиенте
Процедура АнализГрафика(Команда)
	
	ПараметрыФормы = Новый Структура;	
	ПараметрыФормы.Вставить("Адрес", ПоместитьДанныеВоВременноеХранилище()); 
	
	ОткрытьФорму("Документ.ВКМ_ГрафикОтпусков.Форма.ФормаАнализГрафика",ПараметрыФормы, ЭтотОбъект);
	
КонецПроцедуры 
#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Функция ПоместитьДанныеВоВременноеХранилище() 
	
	ТаблДанных = Объект.ОтпускаСотрудников.Выгрузить();
	
	Адрес = ПоместитьВоВременноеХранилище(ТаблДанных, УникальныйИдентификатор);  
	
	Возврат Адрес;
	
КонецФункции

#КонецОбласти



