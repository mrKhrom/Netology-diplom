#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

Функция ПолучитьДанныеИзРегистровМенеджер(Организация, Период) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВКМ_ВыполненныеКлиентуРаботыОстатки.Клиент КАК Клиент,
	|	ВКМ_ВыполненныеКлиентуРаботыОстатки.Договор КАК Договор
	|ИЗ
	|	РегистрНакопления.ВКМ_ВыполненныеКлиентуРаботы.Остатки(&Период, ) КАК ВКМ_ВыполненныеКлиентуРаботыОстатки
	|
	|СГРУППИРОВАТЬ ПО
	|	ВКМ_ВыполненныеКлиентуРаботыОстатки.Клиент,
	|	ВКМ_ВыполненныеКлиентуРаботыОстатки.Договор";
	
	Запрос.УстановитьПараметр("Период", Период.ДатаОкончания); 
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать(); 
	
	МассивДокументовРеализации = Новый Массив; 
	
	Пока Выборка.Следующий() Цикл
		
		Данные = Новый Структура;
		Данные.Вставить("Дата", Период.ДатаОкончания);
		Данные.Вставить("Организация", Организация);
		Данные.Вставить("Контрагент", Выборка.Клиент);
		Данные.Вставить("Договор", Выборка.Договор);
		
		РеализацияСсылка = СозданиеРеализации(Данные);
		
		Данные.Вставить("ДокументСсылка", РеализацияСсылка);
		
		МассивДокументовРеализации.Добавить(Данные);
		
	КонецЦикла;
	
	Возврат МассивДокументовРеализации;
	
КонецФункции

//@skip-check module-structure-method-in-regions
Функция СозданиеРеализации(Парам)
	
	ДокументОбъект = Документы.РеализацияТоваровУслуг.СоздатьДокумент();
	
	ДокументОбъект.Заполнить(Парам);
	
	Отказ = Ложь;
	
	ДанныеАвтозаполнения = ДокументОбъект.ВыполнитьАвтозаполнение(Отказ);
	
	Для Каждого элДанные из ДанныеАвтозаполнения Цикл
		НоваяСтрокаУслуг = ДокументОбъект.Услуги.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрокаУслуг, элДанные);
	КонецЦикла;
	
	Если Не Отказ Тогда
		
		ДокументОбъект.Записать(РежимЗаписиДокумента.Проведение);
		Возврат ДокументОбъект.Ссылка;
		
	КонецЕсли;
	
	Возврат Документы.РеализацияТоваровУслуг.ПустаяСсылка();
	
КонецФункции

#КонецОбласти

#КонецЕсли
